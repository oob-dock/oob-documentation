{
	"info": {
		"_postman_id": "30cec40f-3137-4f56-b2f4-de308ba33061",
		"name": "OOB-Phase3",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "payments",
			"item": [
				{
					"name": "paymentsPostPixPayments",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-Correlation-ID",
								"value": "{{$guid}}",
								"type": "text"
							},
							{
								"key": "x-idempotency-key",
								"value": "{{$guid}}",
								"type": "text"
							},
							{
								"key": "X-Brand-ID",
								"value": "opus",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/jwt",
								"type": "text"
							},
							{
								"key": "errorCode",
								"value": "403",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXVCJ9.eyJkYXRhIjp7ImxvY2FsSW5zdHJ1bWVudCI6IkRJQ1QiLCJwYXltZW50Ijp7ImFtb3VudCI6IjEuMjMiLCJjdXJyZW5jeSI6IkJSTCJ9LCJjcmVkaXRvckFjY291bnQiOnsiaXNwYiI6IjEyMzQ1Njc4IiwibnVtYmVyIjoiMTIzNDU2Nzg5MCIsImFjY291bnRUeXBlIjoiQ0FDQyIsImlzc3VlciI6IjE3NzQifSwiY25wakluaXRpYXRvciI6IjAwMDAwMDAwMDAwMTkxIiwicmVtaXR0YW5jZUluZm9ybWF0aW9uIjoiUGFnYW1lbnRvIGRhIG5vdGEgWFBUTzAzNS0wMDIuIiwicHJveHkiOiIxMjM0NTY3ODkwMSIsInRyYW5zYWN0aW9uSWRlbnRpZmljYXRpb24iOiJFMDAwMzgxNjYyMDE5MDcyNjE1NTl5Nmo2IiwiaWJnZVRvd25Db2RlIjoiNTMwMDEwOCJ9LCJhdWQiOiJodHRwczovL29wdXMtc29mdHdhcmUuY29tLmJyIiwiaXNzIjoiNTc2MGU5ZTMtYjZjMS00YjAzLTgyNzYtMzhmNDEzNDRiMDA2IiwianRpIjoiMDVjZjc0MGItNGQ1My00NzAyLThjMzItN2M1YjNhYjYxNDAwIiwiaWF0IjoxNjMxNzIzMjgyfQ.KW9ouCs4VHOvI5roJ_v3tBdStPBY3S-_Yj1gVWGcAijq1V7rw9aO2YCQBu-dtoMYq0OiHMjxePOjKq7clFrhaMe5TAHfW8iDVhkKXIjzHhU56fDgjNbYZv5R-0BzgD5T4rZEPNaSof6ihlLtcu15BoWRP5o9TCRQyZSP1ZTtYCRd_YfX3uFR40tqfl--ZJOc1O-xOPbzxKUU_9ESLeBg7nQamKem7voH191h1d63DIO3oyXil7dw15x07CnWUdkcHpMO4KWPn1vusBSvfpf8NjBC9VJhKnlKLHlxouZtd9x4YpWE_2jfrk9ywScIFqMLca6jqmG6lQ1KSTTJ_XJHGA",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "{{HostBase}}/payments/v1/pix/payments",
							"host": [
								"{{HostBase}}"
							],
							"path": [
								"payments",
								"v1",
								"pix",
								"payments"
							]
						}
					},
					"response": []
				},
				{
					"name": "paymentsGetPixPaymentsPaymentId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Correlation-ID",
								"value": "{{$guid}}",
								"type": "text"
							},
							{
								"key": "X-Brand-ID",
								"value": "gfh546u3hey6uet467ie",
								"type": "text"
							},
							{
								"key": "X-Brand-Name",
								"value": "OPUS",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/jwt",
								"type": "text"
							},
							{
								"key": "errorCode",
								"value": "404",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{HostBase}}/payments/v1/pix/payments/:paymentId",
							"host": [
								"{{HostBase}}"
							],
							"path": [
								"payments",
								"v1",
								"pix",
								"payments",
								":paymentId"
							],
							"variable": [
								{
									"key": "paymentId",
									"value": "EE883F009A81FA6D5CFF5BA549F281CE40342B4A2B0908BD33D7874A861C40E7"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{OAuth_Token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Refresh the OAuth token if necessary",
					"var tokenDate = new Date(2021,1,1);",
					"var tokenTimestamp = pm.collectionVariables.get(\"OAuth_Timestamp\");",
					"if(tokenTimestamp){",
					"  tokenDate = Date.parse(tokenTimestamp);",
					"}",
					"var expiresInTime = pm.collectionVariables.get(\"OAuth_ExpiresInTime\");",
					"if( !expiresInTime){",
					"    expiresInTime = 300000; // Set default expiration time to 5 minutes",
					"}",
					"if((new Date() - tokenDate) >= expiresInTime) ",
					"{",
					"   var uuid = require('uuid');",
					"   var myUUID = uuid.v4();",
					"",
					"   pm.sendRequest({",
					"      url:  pm.collectionVariables.get(\"TokenEndpoint\"), ",
					"      method: 'POST',",
					"      header: {",
					"        'Accept': 'application/json',",
					"        'Content-Type': 'application/x-www-form-urlencoded',",
					"      },",
					"      body: {",
					"          mode: 'urlencoded',",
					"          urlencoded: [",
					"              {key: \"grant_type\", value: \"client_credentials\", disabled: false},",
					"              {key: \"client_id\", value: pm.collectionVariables.get(\"TokenClientId\"), disabled: false},",
					"              {key: \"client_secret\", value: pm.collectionVariables.get(\"TokenClientSecret\"), disabled: false},",
					"              {key: \"scope\", value: pm.collectionVariables.get(\"TokenScope\") + myUUID, disabled: false}",
					"          ]",
					"      }",
					"  }, function (err, res) {",
					"        pm.collectionVariables.set(\"OAuth_Token\", res.json().access_token);",
					"        pm.collectionVariables.set(\"OAuth_Timestamp\", new Date());",
					"        ",
					"        // Set the ExpiresInTime variable to the time given in the response if it exists",
					"        if(res.json().expires_in){",
					"            expiresInTime = res.json().expires_in * 1000;",
					"        }",
					"        pm.collectionVariables.set(\"OAuth_ExpiresInTime\", expiresInTime);",
					"  });",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "HostBase",
			"value": "http://localhost:8080/open-banking"
		},
		{
			"key": "TokenEndpoint",
			"value": "https://obb.qa.oob.opus-software.com.br/auth/token"
		},
		{
			"key": "TokenClientId",
			"value": "as_client_test"
		},
		{
			"key": "TokenClientSecret",
			"value": "as_client_test"
		},
		{
			"key": "TokenScope",
			"value": "payments consent:urn:amazingbank:"
		},
		{
			"key": "OAuth_Timestamp",
			"value": ""
		},
		{
			"key": "OAuth_ExpiresInTime",
			"value": ""
		},
		{
			"key": "OAuth_Token",
			"value": ""
		}
	]
}